name: Test Template

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black mypy types-all
      - name: Run linters
        run: |
          black --check template.py
          ruff check template.py
          mypy template.py

  test-script:
    name: Test Template Script
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install rich pytest pytest-cov

      - name: Run unit tests
        run: |
          pytest tests/test_template.py --cov=template --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
        with:
          file: ./coverage.xml
          fail_ci_if_error: true

  test-generation:
    name: Test Project Generation
    needs: test-script
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install rich

      - name: Test template generation
        run: |
          # Run template with test configuration
          python template.py -y

      - name: Verify generated structure
        run: |
          # Check if essential files were generated/modified
          test -f README.md || exit 1
          test -f pyproject.toml || exit 1
          test -f SECURITY.md || exit 1
          test -f LICENSE || exit 1
          test -f CONTRIBUTING.md || exit 1

  test-environment:
    name: Test Development Environment
    needs: test-generation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Test environment setup
        run: |
          # Run template with environment setup
          python template.py -y

          # Verify virtual environment
          test -d venv || exit 1

          # Verify dependencies installation
          ./venv/bin/pip list | grep -q "rich" || exit 1

          # Test pre-commit hooks if present
          if [ -f .pre-commit-config.yaml ]; then
            ./venv/bin/pre-commit run --all-files
          fi
